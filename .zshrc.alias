# vim: filetype=sh
case "${OSTYPE}" in
    # MacOSX
    darwin*)
        alias e="/Applications/Emacs.app/Contents/MacOS/Emacs"
        alias ee="/Applications/Emacs.app/Contents/MacOS/bin/emacsclient -n"
        alias se="sudo /Applications/Emacs.app/Contents/MacOS/bin/emacsclient -n"
        alias tc="tmux-pbcopy" # tmuxのコピーボードにあるものをMacと共有
        alias tp="pbpaste" # Macのクリップボードにあるものをtmuxにはりつけ
        alias tmux="tmuxx"
        alias ls="ls -G -w"
        alias k="kubectl"
        ;;
    #linux
    linux*)
        alias e="emacs"
        alias ee="emacsclient -n"
        alias se="sudo emacsclient -n"
        alias ls="ls --color"
        ;;
esac

source <(kubectl completion zsh)
alias dc='docker-compose'
alias de='docker-compose exec '
function dmake() {
   docker-compose exec php-fpm bash -c "cd api-base && make $@"
}

alias g='open -a GoLand'
alias w='open -a WebStorm'
alias flushredis='de redis sh -c "redis-cli flushall && rm dump.rdb"'
alias podname='kubectl get po --field-selector=status.phase==Running -o jsonpath="{.items[0].metadata.name}"'
alias pod0='kubectl get po -o jsonpath="{.items[0].metadata.name}"'
alias pod1='kubectl get po -o jsonpath="{.items[1].metadata.name}"'
alias pod2='kubectl get po -o jsonpath="{.items[2].metadata.name}"'
alias pod3='kubectl get po -o jsonpath="{.items[3].metadata.name}"'
alias pod4='kubectl get po -o jsonpath="{.items[4].metadata.name}"'

function rebuild() {
    if [ "$1" = "" ]; then
      echo "please set version";
    else
      eval $(minikube docker-env) \
      && docker build -f Dockerfile.minikube -t api-bizcrm:v1.0.$1 . \
      && kubectl set image deployment/bizcrm-api-deploy api=api-bizcrm:v1.0.$1
    fi
}

function git_push_open_pr() {
    if [ $# -ne 3 ];then
    	echo "1:remote 2:branch 3:pull request branch の設定をしてください"
    else
      git push "$1" "$2" && git-open -p "$3"
    fi
}


alias sudo='sudo ' # sudoでaliasを認識
# treeをインストールせずに、代替コマンドを利用
if [[ $(command -v tree) == "" ]];then
  alias tree='pwd;find . | sort | sed "1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/|  /g"'
fi


alias reload="source $HOME/.zshrc"
alias mute='/usr/bin/osascript -e "set volume 0"'
alias cdcopy='pwd|pbcopy'
alias imgdim='sips -g pixelHeight -g pixelWidth $1'
alias gip="curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'" # 現在のIPアドレスを取得
alias clock='while :; do printf "%s\r" "$(date +%T)"; sleep 1 ; done' # 時計

alias pa='ps auxwwww'
alias pspgid='ps axwww -o "ppid pgid pid user fname args"'
alias iops='ps auxwwww -L|awk "\$10 ~ /(D|STAT)/{print}"'
alias u='cd ..'
alias uu='cd ../..'
alias uuu='cd ../../..'
alias uuuu='cd ../../../..'
alias ddu='du -sm ./*|sort -n|tail'
# カレントフォルダ以下のファイル名を一覧表示
iname() { find . -type d -name .svn -prune -o \( -iname "*$1*" -print \); }
alias fnuniq='cut -d: -f1|uniq'

# 拡張子に応じて適切なアプリケーションでファイルを開く
# http://d.hatena.ne.jp/itchyny/20130227/1361933011
alias -s sh=sh
alias -s rb=ruby
alias -s php=php
function extract() {
  case $1 in
    *.tar.gz|*.tgz) tar xzvf $1;;
    *.tar.xz) tar Jxvf $1;;
    *.zip) unzip $1;;
    *.lzh) lha e $1;;
    *.tar.bz2|*.tbz) tar xjvf $1;;
    *.tar.Z) tar zxvf $1;;
    *.gz) gzip -dc $1;;
    *.bz2) bzip2 -dc $1;;
    *.Z) uncompress $1;;
    *.tar) tar xvf $1;;
    *.arj) unarj $1;;
  esac
}
alias -s {gz,tgz,zip,lzh,bz2,tbz,Z,tar,arj,xz}=extract

if [ `uname` = "Darwin" ]; then
  alias eog='open -a Preview'
  alias firefox='open -a Firefox '
  alias excel='open -a "Microsoft Excel" '
fi
alias -s {png,jpg,bmp,PNG,JPG,BMP}=eog

export SHUTDOWN_CONFIRM_FLAG=0
alias where="command -v"
alias la="ls -a"
alias lf="ls -F"
alias ll="ls -l"
alias du="du -h"
alias df="df -h"
alias su="su -l"
